name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: orchestrator/
      - name: Build Orchestrator
        run: cargo check --all --verbose
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: orchestrator/
      - name: Run Orchestrator tests
        run: cargo test --all --release --verbose
  rustfmt:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install most recent Rustfmt
        run: |
          rustup set profile minimal
          rustup default "nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)"
          rustup component add rustfmt
      - name: Run `cargo fmt`
        run: |
          cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: orchestrator/
      - name: Check for Clippy lints
        run: rustup component add clippy && cargo clippy --all --all-targets --all-features -- -D clippy::all
  audit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: orchestrator/
      - name: Run Cargo Audit
        run: cargo install cargo-audit && cargo audit
